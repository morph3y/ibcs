@using Entities
@model Web.Models.TournamentModels.TournamentBracketViewModel

<div class="update-tournament">
    @Html.ActionLink("Games", "EditGames", new { id = Model.Id }) | @Html.ActionLink("Contestants", "Contestants", new { controller = "Tournament", area = "Admin", id = Model.Id })

    @using (Html.BeginForm())
    {
        @Html.LabelFor(x => x.Name)
        <br />
        @Html.TextBoxFor(x => x.Name)
        <br />
        @Html.LabelFor(x => x.PointsForTie)
        <br />
        @Html.TextBoxFor(x => x.PointsForTie)
        <br />
        @Html.LabelFor(x => x.PointsForWin)
        <br />
        @Html.TextBoxFor(x => x.PointsForWin)
        <br />
        @Html.LabelFor(x => x.IsRanked)
        <br />
        @Html.CheckBoxFor(x => x.IsRanked)
        <br />
        @Html.LabelFor(x => x.IsTeamEvent)
        <br />
        @Html.CheckBoxFor(x => x.IsTeamEvent)
        <br />
        @Html.LabelFor(x => x.Status)
        <br />
        @Html.DropDownListFor(x => x.Status, new SelectList(Enum.GetValues(typeof(TournamentStatus))))
        <br />
        @Html.LabelFor(x => x.TournamentType)
        <br />
        @Html.DropDownListFor(x => x.TournamentType, new SelectList(Enum.GetValues(typeof(TournamentType))))

        <input type="submit" value="Save" />
    }

    @if (Model.Status == TournamentStatus.Closed)
    {
        using (Html.BeginForm(new { action = "Convert", controller = "Tournament", area = "Admin" }))
        {
            @Html.Raw("Convert to: ")
            @Html.DropDownList("targetType", new SelectList(Enum.GetValues(typeof(TournamentType))))
            @Html.Raw(" with limit of: ")
            @Html.DropDownList("playerLimit", new SelectList(new[] { 4, 8, 16, 32, 64 }))
        
            @Html.Hidden("id", Model.Id)

            <input type="submit" value="Convert"/>
        }
    }
</div>