@using Entities
@model Web.Models.TournamentModels.TournamentDetailViewModel

<div class="tournament-detail">
    @{
        var stageName = Model.Tournament.TournamentType == TournamentType.League ? "Main" : Model.Tournament.Stages.LastOrDefault() == null ? "" : Model.Tournament.Stages.Last().Name;
    }

    Name : @Model.Tournament.Name <br />
    Stage : @stageName <br />
    Status : @Model.Tournament.Status.ToString() <br />
    Format : @Model.Tournament.TournamentType.ToString() <br />
    Team Event : @(Model.Tournament.IsTeamEvent ? "Yes" : "No") <br />

    @{
        var inTournament = Model.UserInTournament;
        if (User.Identity.IsAuthenticated)
        {
            @Html.Raw((Model.Tournament.IsTeamEvent ? "Your team is " : "You are ") + ((inTournament) ? "" : "not") + " registered.");
        <br />
        }
    }
    @{
        if (Model.Tournament.Status == TournamentStatus.Registration && User.Identity.IsAuthenticated)
        {
            if (!inTournament)
            {
                if (Model.Tournament.IsTeamEvent)
                {
                    foreach (var team in Model.MyTeams)
                    {
                        @Html.ActionLink("Register \"" + team.Name + "\"", "Register", new { tournamentId = Model.Tournament.Id, contestantId = team.Id })
                        <br />
                    }
                }
                else
                {
                    @Html.ActionLink("Register", "Register", new { tournamentId = Model.Tournament.Id, contestantId = Contracts.Session.Session.Current.Id })
                }
            }
            else
            {
                if (Model.Tournament.IsTeamEvent)
                {
                    var registeredTeam = Model.Tournament.Contestants.Intersect(Model.MyTeams);
                    if (registeredTeam.Any() && registeredTeam.Count() == 1)
                    {
                        @Html.ActionLink("Unregister", "Unregister", new {tournamentId = Model.Tournament.Id, contestantId = registeredTeam.First().Id})
                    }
                }
                else
                {
                    @Html.ActionLink("Unregister", "Unregister", new { tournamentId = Model.Tournament.Id, contestantId = Contracts.Session.Session.Current.Id })
                }
            }
            <br />
        }
    }
    @Html.ActionLink("View standings", "Bracket", new { id = Model.Tournament.Id })
</div>
