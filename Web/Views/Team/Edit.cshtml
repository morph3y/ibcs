@using Web.Infrastructure
@using Web.Models.Dto
@model Entities.Team

@section styles
{
    <link rel="stylesheet" type="text/css" href="~/Content/Team.css" />
}

@section scripts
{
    <script type="text/javascript" src="~/Scripts/System/System.Dialog.js"></script>
    <script type="text/javascript" src="~/Scripts/System/Team/System.Team.TeamBuilder.js"></script>
    <script type="text/javascript" src="~/Scripts/System/Team/System.Team.Urls.js"></script>
}

@section onReady
{
    System.Team.Urls.removeMemberUrl = "@Url.Action("RemoveMember", "Team", new { area = "" })";
    System.Team.Urls.getAvailableMembers = "@Url.Action("GetAvailableMembers", "Team", new { area = "" })";
    System.Team.Urls.addMember = "@Url.Action("AddMember", "Team", new { area = "" })";
    var teamBuilder = new System.Team.TeamBuilder(@Html.Raw(new GenericDataContractJsonSerializer<SubjectDto>().Serialize(DtoBuilder.BuildSubject(Model))));
    teamBuilder.render($('.members-grid'));
}

<div class="team-wrapper">
    @{
        var authorized = User.Identity.IsAuthenticated && (
            Contracts.Session.Session.Current.IsAdmin || (
                Model.Captain != null && Contracts.Session.Session.Current.Id == Model.Captain.Id));
    }

    @using (Html.BeginForm("Edit", "Team", new { area = "" }))
    {
        @Html.ValidationSummary(false)
        <br />
        @Html.LabelFor(x => x.Name)
        <br />
        <div>
            @(authorized ? Html.TextBoxFor(x => x.Name) : Html.Raw(Model.Name))
        </div>
        <br />
        @Html.LabelFor(x => x.Captain)
        @Html.Raw(":")
        @(Model.Captain != null ? Model.Captain.Name : "")
        <br />
        @(authorized ? @Html.Raw("<input type=\"submit\" value=\"Save\"/>") : Html.Raw(""))
    }
    <br />
    Members:
    @if (User.Identity.IsAuthenticated && (
        Contracts.Session.Session.Current.IsAdmin || (
            Model.Captain != null && Contracts.Session.Session.Current.Id == Model.Captain.Id)))
    {
        <div class="members-grid">
            <table>
                <thead>
                    <tr>
                        <th><span class="add-member">Add</span></th>
                        <th>Member name</th>
                        <th>Team captain</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    }
    else
    {
        <ul>
            @foreach (var member in Model.Members)
            {
                <li>@member.Name</li>
            }
        </ul>
    }
</div>